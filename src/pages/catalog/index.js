import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';

import DefaultLayout from '../../layouts/DefaultLayout';
import ConsultationModal from '../../components/modals/ConsultationModal';

import { CatalogConfig, fetchContent, strapiImage } from '../../api';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Col, Container, Row } from 'react-bootstrap';


export default function Catalog({ data }) {
  return (
    <>
      <Head>
        <title>DION – Каталог</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <DefaultLayout>
        <section className="hero-banner">
          <Container>
            <Row className="justify-content-center">
              <Col xl={10} xxl={8} className="text-center">
                <h1 dangerouslySetInnerHTML={{__html: data.HeroBanner.Title}} />
                <p dangerouslySetInnerHTML={{__html: data.HeroBanner.Description}} />
                <ConsultationModal buttonTitle={data.HeroBanner.ButtonTitle} />
              </Col>
            </Row>
          </Container>
        </section>
        {
          data.Category.map((category, categoryIndex) => (
            <section className="products-category" key={categoryIndex}>
              <Container>
                <Row>
                  <Col xs={12} className="pb-4">
                    <div className="title-with-icon">
                      <div className="icon">
                        <Image src={strapiImage(category.Icon.data.attributes.url)} width={18} height={18} alt="Fire Icon"/>
                      </div>
                      <h4 className="title">
                        {category.Title}
                      </h4>
                    </div>
                  </Col>
                  <Col xs={12}>
                    <Swiper
                      spaceBetween={24}
                      slidesPerView={1.5}
                      speed={800}
                      breakpoints={{
                        768: {
                          slidesPerView: 5,
                        },
                      }}
                      className="products-slider"
                    >
                      {
                        category.Products.data.map((product, productIndex) => (
                          <SwiperSlide key={productIndex}>
                            <div className="product-block">
                              <div className="block-image">
                                <Link href={`/catalog/product/${product.id}`}>
                                  <a>
                                    <Image src={strapiImage(product.attributes.FeaturedImage.data.attributes.url)} width={180} height={300} alt="Waterheater Index" />
                                  </a>
                                </Link>
                              </div>
                              <div className="block-content">
                                <div className="block-title">
                                  <Link href={`/catalog/product/${product.id}`}>
                                    <a>
                                      {product.attributes.Model}, <span>{product.attributes.Title}</span>
                                    </a>
                                  </Link>
                                </div>
                                <div className="block-price">
                                  {product.attributes.Price} грн
                                </div>
                              </div>
                            </div>
                          </SwiperSlide>
                        ))
                      }
                    </Swiper>
                  </Col>
                </Row>
              </Container>
            </section>
          ))
        }
      </DefaultLayout>
    </>
  );
}

export const getStaticProps = async () => {
  try {
    const data = await fetchContent('catalog', CatalogConfig);

    return {
      props: {
        data,
      },
    };
  } catch (error) {
    console.error(error);
  }

  return {
    props: {},
  };
};